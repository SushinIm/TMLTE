<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.TM.LTE" />
	
	<!-- dbcp Bean -->
	<beans:bean class="org.springframework.jndi.JndiObjectFactoryBean" 
	id="dataSource">
		<beans:property name="jndiName" value="jdbc/OracleDB" />
		<beans:property name="resourceRef" value="true" />
	</beans:bean>
	
	<!-- sqlSessionFactory & sqlSession -->
	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" 
	id="sqlSessionFactory">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property value="/WEB-INF/mybatis/mybatis-conf.xml" 
		name="configLocation" />
		<beans:property value="/WEB-INF/mybatis/mapper/*.xml" 
		name="mapperLocations" />
	</beans:bean>
	
	<!-- sqlSessionTemplate -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	<tx:annotation-driven/><!-- @Transactional사용하기 위해-->
	<!-- TransactionManager 세부설정코딩 후 트랜잭션 사용시 id명을 반드시 transactionManager 로 해야한다.-->
	<beans:bean id="transactionManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 파일 첨부(Multipart Resolver 설정): form태그가 enctype="multipart/form-data"인 
  		경우 서버의 Bean으로 전달해줌 -->
 	<beans:bean id="multipartResolver"
  		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  		<beans:property name="defaultEncoding" value="UTF-8" />
  		<beans:property name="maxUploadSize" value="10000000" /> 
  		<beans:property name="maxInMemorySize" value="10000000" />
 	</beans:bean>
 	
 	<!-- gmail -->
    <beans:bean id="mailSender" class ="org.springframework.mail.javamail.JavaMailSenderImpl" >
        <beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587" />
        <beans:property name="defaultEncoding" value="utf-8"/>
        <beans:property name="username" value="ujin8831@gmail.com" />
        <beans:property name="password" value="88gksmfQUF" />
       
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    
   	 <beans:bean id="email" class="com.TM.LTE.bean.Email">
    </beans:bean>
    
    <beans:bean id="emailSender" class="com.TM.LTE.userClass.EmailSender">
    </beans:bean>
</beans:beans>